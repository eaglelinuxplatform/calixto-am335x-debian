/*
 * Copyright (C) 2014 Calixto Systems Pvt Ltd - http://www.calixto.co.in/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/*
 * AM335x CALIXTO STAMP EVM
 * http:// http://www.calixto.co.in/
 * Modified from am335x-evmsk
 * Modified by Jithin Shyam <jithin.s@calixto.in>
 */

/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "CALIXTO-AM335X-NXT";
	compatible = "ti,am335x-calixto-nxt", "ti,am33xx";

	cpus {
		cpu@0 {
			 cpu0-supply = <&vdd_mpu_supply>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512MB */
	};

	vmmcsd_fixed: fixedregulator-sd {
		compatible = "regulator-fixed";
		regulator-name = "vmmcsd_fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	vdd_mpu_supply: fixedregulator-mpu {
		compatible = "regulator-fixed";
		regulator-name = "vdd_mpu_supply";
		regulator-min-microvolt = <1262000>;
		regulator-max-microvolt = <1262000>;
		regulator-boot-on;
	};

	core_audio_supply: fixedregulator@1 {
                compatible = "regulator-fixed";
                regulator-name = "core_audio_supply";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
        };

        io_audio_supply: fixedregulator@2 {
                compatible = "regulator-fixed";
                regulator-name = "io_audio_supply";
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <1800000>;
                regulator-boot-on;
        };

	sound {
            compatible = "ti,da830-evm-audio";
            ti,model = "CALIXTO-AM335X-NXT";
            ti,audio-codec = <&tlv320aic3106>;
            ti,mcasp-controller = <&mcasp0>;
            ti,codec-clock-rate = <24576000>;
            ti,audio-routing =
                    "Headphone Jack",       "HPLOUT",
                    "Headphone Jack",       "HPROUT",
                    "Line Out",             "LLOUT",
                    "Line Out",             "RLOUT",
                    "LINE1L",               "Line In",
                    "LINE1R",               "Line In",
                    "MIC3L",                "Mic Jack",
                    "MIC3R",                "Mic Jack";
        };
	
	leds {
                pinctrl-names = "default", "sleep";
                pinctrl-0 = <&user_leds_default>;
                pinctrl-1 = <&user_leds_sleep>;

                compatible = "gpio-leds";

                led@1 {
                        label = "led1";
                        gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>;
                        linux,default-trigger = "heartbeat";
                        default-state = "on";
                };

                led@2 {
                        label = "led2";
                        gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
                        linux,default-trigger = "heartbeat";
                        default-state = "on";
                };
        };

	gpio_buttons: gpio_buttons@0 {
                compatible = "gpio-keys";
                pinctrl-names = "default";
                pinctrl-0 = <&gpio_keys_s0>;
                #address-cells = <1>;
                #size-cells = <0>;

                switch@1 {
                        label = "button0";
                        linux,code = <0x100>;
                        gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>;
                };

        };
};


&am33xx_pinmux {

	pinctrl-names = "default";
	pinctrl-0 = <&clkout2_pin>;

	user_leds_default: user_leds_default {
                pinctrl-single,pins = <
                        0x19C ( PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (C12) mcasp0_ahclkr.gpio3[17] */
                        0x1A0 ( PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (A14) mcasp0_ahclkx.gpio3[21] */
                >;
        };

        user_leds_sleep: user_leds_sleep {
                pinctrl-single,pins = <
                        0x19C ( PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (C12) mcasp0_ahclkr.gpio3[17] */
                        0x1A0 ( PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (A14) mcasp0_ahclkx.gpio3[21] */
                >;
        };


        gpio_keys_s0: gpio_keys_s0 {
                pinctrl-single,pins = <
                        0x1A4 ( PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (C13) mcasp0_fsr.gpio3[19] */
                >;
        };

	i2c0_pins: pinmux_i2c0_pins {
                pinctrl-single,pins = <
                        0x188 (PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_sda.i2c0_sda */
                        0x18C (PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_scl.i2c0_scl */
                >;
        };


	spi0_pins: pinmux_spi0_pins {
		pinctrl-single,pins = <
			0x150 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (A17) spi0_sclk.spi0_sclk */
			0x154 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (B17) spi0_d0.spi0_d0 */
			0x158 ( PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (B16) spi0_d1.spi0_d1 */
			0x15c ( PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (A16) spi0_cs0.spi0_cs0 */
		>;
	};


 	uart0_pins: pinmux_uart0_pins {
                pinctrl-single,pins = <
                        0x170 (PIN_INPUT_PULLUP    | MUX_MODE0)  /* uart0_rxd.uart0_rxd */
                        0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)  /* uart0_txd.uart0_txd */
                >;
        };

	uart1_pins: pinmux_uart1_pins {
                pinctrl-single,pins = <
                        0x180 (PIN_INPUT_PULLUP    | MUX_MODE0)  /* (D16) uart1_rxd.uart1_rxd */
                        0x184 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)  /* (D15) uart1_txd.uart1_txd */
                >;
        };

        uart3_pins: pinmux_uart3_pins {
                pinctrl-single,pins = <
                        0x160 (PIN_INPUT_PULLUP    | MUX_MODE1)  /* (C15) spi0_cs1.uart3_rxd */
                        0x138 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* (L16) gmii1_rxd2.uart3_txd */
                >;
        };

        uart4_pins: pinmux_uart4_pins {
                pinctrl-single,pins = <
                        0x11C (PIN_INPUT_PULLUP    | MUX_MODE3)  /* (J18) gmii1_txd3.uart4_rxd */
                        0x120 (PIN_OUTPUT_PULLDOWN | MUX_MODE3)  /* (K15) gmii1_txd2.uart4_txd */
                >;
        };


	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			0x10c (PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_crs.rmii1_crs_dv */
			0x110 (PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxerr.mii1_rxerr */
			0x114 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txen.mii1_txen   */
			0x124 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txd1.mii1_txd1   */
			0x128 (PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txd0.mii1_txd0   */
			0x13c (PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxd1.mii1_rxd2   */
			0x140 (PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxd0.mii1_rxd0   */
			0x144 (PIN_INPUT_PULLDOWN  | MUX_MODE0)  /* rmii1_refclk.rmii1_refclk */
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			0x10c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x110 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x114 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x124 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x128 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x144 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

       clkout2_pin: pinmux_clkout2_pin {
                pinctrl-single,pins = <
                        0x1B4 (PIN_OUTPUT_PULLDOWN | MUX_MODE3) /* xdma_event_intr1.clkout2 */
                >;
        };

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			0x148 (PIN_INPUT_PULLUP  | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	mmc1_pins_default: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x0F0 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat3.mmc0_dat3 */
			0x0F4 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat2.mmc0_dat2 */
			0x0F8 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat1.mmc0_dat1 */
			0x0FC (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat0.mmc0_dat0 */
			0x100 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_clk.mmc0_clk */
			0x104 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_cmd.mmc0_cmd */
		/*	0x190 (PIN_INPUT | MUX_MODE7) 	*/	/* mcasp0_aclkx.gpio3_14 */
		>;
	};

	mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
		pinctrl-single,pins = <
			0x0F0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0F4 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0F8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0FC (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x100 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x104 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x190 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	emmc_pins: pinmux_emmc_pins {
		pinctrl-single,pins = <
		0x80 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (U9) gpmc_csn1.mmc1_clk */
		0x84 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (V9) gpmc_csn2.mmc1_cmd */
		0x00 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (U7) gpmc_ad0.mmc1_dat0 */
		0x04 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (V7) gpmc_ad1.mmc1_dat1 */
		0x08 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (R8) gpmc_ad2.mmc1_dat2 */
		0x0c ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (T8) gpmc_ad3.mmc1_dat3 */
		>;
	};	

	mcasp0_pins: mcasp0_pins {
		pinctrl-single,pins = <
			0x12C (PIN_INPUT_PULLDOWN  | MUX_MODE6) /* mii1_txclk.mcasp0_aclkx */
			0x194 (PIN_INPUT_PULLDOWN  | MUX_MODE0) /* mcasp0_fsx.mcasp0_fsx   */
			0x134 (PIN_OUTPUT_PULLDOWN | MUX_MODE6) /* mii1_rxd3.mcasp0_axr0   */
			0x1A8 (PIN_INPUT_PULLDOWN  | MUX_MODE0) /* mcasp0_axr1.mcasp0_axr1 */
		>;
	};

	mcasp0_sleep_pins: mcasp0_sleep_pins {
		pinctrl-single,pins = <
			0x12C (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x194 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x1A8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};



};

&elm {
	status = "okay";
};

/*
 * SPI Flash (8MiB)
 * 0x000000 - 0x01FFFF : SPL (128KiB)
 * 0x020000 - 0x09FFFF : U-Boot (512KiB)
 * 0x0A0000 - 0x0BFFFF : First copy of U-Boot Environment (128KiB)
 * 0x0C0000 - 0x0DFFFF : Second copy of U-Boot Environment (128KiB)
 * 0x0E0000 - 0x0FFFFF : device tree blob (Not used now) (128KiB)
 * 0x100000 - 0x800000 : Application data (7MiB)
 */

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	status = "okay";

	flash: n25q032@0 {
		 #address-cells = <1>;
		 #size-cells = <1>;
		 compatible = "st,m25p32";
		 spi-max-frequency = <25000000>;
		 reg = <0>;


		 partition@0 {
			 label = "u-boot-spl";
			 reg = <0x000000 0x020000>;
		 };


		 partition@1 {
			 label = "u-boot";
			 reg = <0x020000 0x080000>;
		 };

		 partition@2 {
			 label = "env1";
			 reg = <0x0A0000 0x020000>;
		 };

		 partition@3 {
			 label = "env2";
			 reg = <0x0C0000 0x020000>;
		 };
/*
		 partition@4 {
			 label = "device-tree-blob";
			 reg = <0x0E0000 0x020000>;
		 };
*/
		 partition@5 {
			 label = "app-data";
			 reg = <0x100000 0x700000>;
		 };

	};
};


&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	status = "okay";
	clock-frequency = <400000>;

        tlv320aic3106: tlv320aic3106@18 {
             	compatible = "ti,tlv320aic3106";
             	reg = <0x18>;
             	ai3x-micbias-vg = <1>;
             	status = "okay";

             	/* Regulators */
             	AVDD-supply  = <&core_audio_supply>;
            	IOVDD-supply = <&core_audio_supply>;
             	DRVDD-supply = <&core_audio_supply>;
             	DVDD-supply  = <&io_audio_supply>;
	  };

	pcf8563: pcf8563@51 {
		compatible = "nxp,pcf8563";
		reg = <0x51>;
	};

};

&mcasp0 {
          pinctrl-names = "default", "sleep";
          pinctrl-0 = <&mcasp0_pins>;
          pinctrl-1 = <&mcasp0_sleep_pins>;

          status = "okay";

          op-mode = <0>;          /* MCASP_IIS_MODE */
          tdm-slots = <2>;
          /* 16 serializer */
          serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
                 1 2 0 0
          >;
          tx-num-evt = <32>;
          rx-num-evt = <32>;
};


&uart0 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart0_pins>;

        status = "okay";
};

&uart1 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart1_pins>;

        status = "okay";
};

&uart3 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart3_pins>;

        status = "okay";
};

&uart4 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart4_pins>;

        status = "okay";
};

&mac {
	slaves = <1>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "rmii";
	dual_emac_res_vlan = <1>;
};

&phy_sel {
	rmii-clock-ext;
};

&mmc1 {
        status = "okay";
        vmmc-supply = <&vmmcsd_fixed>;
        bus-width = <4>;
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&mmc1_pins_default>;
        pinctrl-1 = <&mmc1_pins_sleep>;
	cd-gpios = <&gpio3 14 GPIO_ACTIVE_HIGH>;
};

&mmc2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
        vmmc-supply = <&vmmcsd_fixed>;
	bus-width = <4>;
	ti,non-removable;
};


&rtc {
	system-power-controller;
};

&sgx {
      status = "okay";
};

&usb {
        status = "okay";
};

&usb_ctrl_mod {
        status = "okay";
};

&usb0_phy {
        status = "okay";
};

&usb1_phy {
        status = "okay";
};

&usb0 {
        status = "okay";
	dr_mode = "host";
};

&usb1 {
        status = "okay";
	dr_mode = "otg";
};

&cppi41dma  {
     status = "okay";
};


